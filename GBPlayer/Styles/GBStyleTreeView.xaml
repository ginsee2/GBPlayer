<ResourceDictionary 
  x:Uid="ResourceDictionary_1" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary x:Uid="ResourceDictionary_2" Source="../Styles/GBColors.xaml"/>
        <ResourceDictionary x:Uid="ResourceDictionary_3" Source="../Styles/GBStyleScrollView.xaml" />
        <ResourceDictionary x:Uid="ResourceDictionary_4" Source="../Styles/GBStyleTextBox.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--DEFINITION D'UN STYLE POUR TREEVIEW-->
    <Style x:Uid="Style_1" x:Key="GBTreeView" TargetType="{x:Type TreeView}" >
        <Setter x:Uid="Setter_1" Property="OverridesDefaultStyle" Value="True" />
        <Setter x:Uid="Setter_2" Property="SnapsToDevicePixels" Value="True" />
     <!--   <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        --><Setter x:Uid="Setter_3" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter x:Uid="Setter_4" Property="AllowDrop" Value="true"/>
        <!--DEFINITION D'UN TEMPLATE POUR DECRIRE LA STRUCTURE VISUELLE DU TREEVIEW-->
        <Setter x:Uid="Setter_5" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_1" TargetType="{x:Type TreeView}">
                    <Border x:Uid="Border" x:Name="Border" 
                        CornerRadius="2" 
                        Opacity="1"
                        BorderThickness="1"
                        Padding="2,2,2,2"
                        BorderBrush="{StaticResource W8Border}"
                        Background="{TemplateBinding Background}">
                        <ScrollViewer x:Uid="GBScrollViewer" x:Name="GBScrollViewer"
                            Style="{StaticResource GBStyleScrollViewer}"
                            Focusable="false" 
                            CanContentScroll="False"
                            Padding="4">
                            <!--SPECIFIE LES ITEMS ENFANTS-->
                            <ItemsPresenter x:Uid="ItemsPresenter_1"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--DEFINITION D'UN STYLE POUR L'ICON EXPANDER-->
    <Style x:Uid="Style_2" x:Key="GBExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter x:Uid="Setter_6" Property="Focusable" Value="False"/>
        <!--DEFINITION D'UN TEMPLATE POUR DECRIRE LA STRUCTURE VISUELLE DE L'EXPANDER-->
        <Setter x:Uid="Setter_7" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_2" TargetType="{x:Type ToggleButton}">
                    <Grid
                        x:Uid="Grid_1" Width="15"
                        Height="13"
                        Background="Transparent">
                        <Path x:Uid="ExpandPath" x:Name="ExpandPath"
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="1,1,1,1"
                            Fill="{StaticResource W8Border}"
                            Data="M 4 0 L 8 4 L 4 8 Z"/>
                    </Grid>
                    <!--DEFINITION DES TRIGGERS DE L'ICON EXPANDER-->
                    <ControlTemplate.Triggers>
                        <!--TRIGGER EXECUTE SI ELEMENT COCHE-->
                        <Trigger x:Uid="Trigger_1" Property="IsChecked" Value="True">
                            <Setter x:Uid="Setter_8" Property="Data"
                                TargetName="ExpandPath"
                                Value="M 0,0 L 8,0 L 4,4 Z"/>
                            <Setter x:Uid="Setter_9" TargetName="ExpandPath"
                                Property="Fill"
                                Value="{StaticResource W8BorderOver}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DEFINITION D'UN STYLE POUR L'ICON EXPANDER-->
    <Style x:Uid="Style_3" x:Key="GBAppleToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter x:Uid="Setter_10" Property="Focusable" Value="False"/>
        <!--DEFINITION D'UN TEMPLATE POUR DECRIRE LA STRUCTURE VISUELLE DE L'EXPANDER-->
        <Setter x:Uid="Setter_11" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_3" TargetType="{x:Type ToggleButton}">
                    <Grid
                        x:Uid="Grid_2" Width="13"
                        Height="13"
                        Background="Transparent">
                        <Path x:Uid="Path_1" x:Name="ExpandPath"
                              Margin="0"
                            Grid.Column="1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            StrokeThickness="2"
                            Data="M 0 0 L 4 4 L 0 8" Stroke="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}">
                        </Path>
                    </Grid>
                    <!--DEFINITION DES TRIGGERS DE L'ICON EXPANDER-->
                    <ControlTemplate.Triggers>
                        <!--TRIGGER EXECUTE SI ELEMENT COCHE-->
                        <Trigger x:Uid="Trigger_2" Property="IsChecked" Value="True">
                            <Setter x:Uid="Setter_12" TargetName="ExpandPath"
                                Property="Stroke"
                                Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--DEFINITION D'UN STYLE POUR LES ITEMS D'UN TREEVIEW-->
    <Style x:Uid="Style_4" x:Key="ExGBItems" TargetType="{x:Type TreeViewItem}">
        <Setter x:Uid="Setter_13" Property="OverridesDefaultStyle" Value="True" />
        <Setter x:Uid="Setter_14" Property="Background" Value="Blue"/>
        <Setter x:Uid="Setter_15" Property="Foreground" Value="{StaticResource ItemTextBrush}"/>
        <Setter x:Uid="Setter_16" Property="AllowDrop" Value="true"/>
        <Setter x:Uid="Setter_17" Property="FocusVisualStyle" Value="{x:Null}"/>
        <!--DEFINITION D'UN TEMPLATE POUR DECRIRE LA STRUCTURE VISUELLE DE LA LISTE-->
        <Setter x:Uid="Setter_18" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="gbTemplate" x:Name="gbTemplate" TargetType="{x:Type TreeViewItem}">
                	<ControlTemplate.Resources>
                		<Storyboard x:Uid="Storyboard_1" x:Key="OnDragOver1"/>
                	</ControlTemplate.Resources>
                    <Grid x:Uid="Grid_3" Focusable="False">
                        <!--DEFINITION DES COLONNES DU TABLEAU
                                1 colonne pour l'icon expander
                                1 colonne pour le libellé-->
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition  x:Uid="ColumnDefinition_1" MinWidth="3" Width="Auto"/>
                            <ColumnDefinition x:Uid="ColumnDefinition_2"  />
                        </Grid.ColumnDefinitions>
                        <!--DEFINITION DES LIGNES DU TABLEAU
                                1 ligne pour l'item
                                1 ligne pour ces enfants-->
                        <Grid.RowDefinitions>
                            <RowDefinition x:Uid="RowDefinition_1" Height="Auto"/>
                            <RowDefinition x:Uid="RowDefinition_2"/>
                        </Grid.RowDefinitions>
                        <!--PERSONNALISATION DE L'ICON EXPANDER-->
                        <!--PERSONNALISATION DE L'ITEM-->
                         <Border x:Uid="GBBorder" x:Name="GBBorder" 
                                Grid.Column="1"
                                CornerRadius="5" 
                                Background="{StaticResource ItemNotSelectedFill}" 
                                Opacity="1"
                                Height="20"
                                BorderBrush="{StaticResource ItemNotSelectedFill}"
                                BorderThickness="1"
                                Margin="2,2,2,0">

                            <!--DEFINIE L'AFFICHAGE DE L'ITEM-->
                           <ContentPresenter x:Uid="GBZoneLibelle" x:Name="GBZoneLibelle"
                                    Margin="5,0,0,0"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                <ContentPresenter.Content>
                                    <Grid x:Uid="Grid_4">
                                        <TextBox x:Uid="GBTextBoxItem" x:Name="GBTextBoxItem" 
                                             Text="{TemplateBinding Header}"
                                             Style="{StaticResource GBTextBox}"
                                             FontSize="13"
                                             FontFamily="Calibri"
                                             Margin="-2,0,0,0"
                                             Background="{Binding RelativeSource={RelativeSource FindAncestor, AncestorLevel=1,AncestorType={x:Type Border}},Path=Background}"
                                             Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                                             Opacity="1"
                                             Padding="0"
                                             Visibility="Hidden"
                                                 VerticalAlignment="Center"/>
                                        <TextBlock x:Uid="GBTextBlockItem" x:Name="GBTextBlockItem" Text="{TemplateBinding Header}" Visibility="Visible"
                                                   Margin="0,0,0,2" FontFamily="Calibri" FontSize="13" 
                                                   HorizontalAlignment="Left" VerticalAlignment="Center" />
                                    </Grid>
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </Border>
                        <!--SPECIFIE OU SONT POSITIONNES LES ITEMS ENFANTS-->
                        <ToggleButton x:Uid="GBIconExpander" x:Name="GBIconExpander"
                                      Grid.Column="0"
                                Style="{StaticResource GBExpandCollapseToggleStyle}"
                                IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press"/>
                        <ItemsPresenter x:Uid="GBItemEnfant" x:Name="GBItemEnfant"
                                Grid.Row="1"
                                Grid.Column="1"
                                Grid.ColumnSpan="1"/>
                    </Grid>
                    <!--DEFINITION DES TRIGGERS DE LA PRESENTATION-->
                    <ControlTemplate.Triggers>
                        <!--TRIGGER EXECUTE LORSQU'UN ELEMENT EST SURVOLE-->
                		<Trigger x:Uid="Trigger_3" Property="IsMouseOver" SourceName="GBBorder" Value="True" >
                            <Setter x:Uid="Setter_19" TargetName="GBBorder" Property="Background" Value="{StaticResource ItemHoverFill}"/>
                            <Setter x:Uid="Setter_20" TargetName="GBBorder" Property="BorderBrush" Value="{StaticResource ItemHoverFill}"/>
                        </Trigger>
                		<!-- EXECUTE LORSQU'UN ELEMENT EST SURVOLE-->
                		<Trigger x:Uid="Trigger_4" Property="IsFocused" SourceName="GBTextBoxItem" Value="True">
                			<Setter x:Uid="Setter_21" TargetName="GBBorder" Property="Opacity" Value="1"/>
                		</Trigger>
                		<!-- EXECUTE LORSQU'UN ELEMENT EST SELECTIONNE-->
                        <Trigger x:Uid="Trigger_5" Property="IsSelected" Value="True">
                			<Setter x:Uid="Setter_22" TargetName="GBBorder" Property="Background" Value="{StaticResource ItemSelectedFill}"/>
                            <Setter x:Uid="Setter_23" TargetName="GBBorder" Property="BorderBrush" Value="{StaticResource ItemSelectedFill}"/>
                        </Trigger>
                        <MultiTrigger x:Uid="MultiTrigger_1">
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_1" Property="IsSelected" Value="true"/>
                                <Condition x:Uid="Condition_2" Property="Selector.IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter x:Uid="Setter_24" TargetName="GBBorder" Property="Background" Value="{StaticResource ItemSelectedInactiveFill}"/>
                            <Setter x:Uid="Setter_25" TargetName="GBBorder" Property="BorderBrush" Value="{StaticResource ItemSelectedInactiveFill}"/>
                        </MultiTrigger>
                        <MultiTrigger x:Uid="MultiTrigger_2">
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_3" Property="IsSelected" Value="true"/>
                                <Condition x:Uid="Condition_4" SourceName="GBBorder" Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter x:Uid="Setter_26" TargetName="GBBorder" Property="Background" Value="{StaticResource ItemSelectedHoverFill}"/>
                            <Setter x:Uid="Setter_27" TargetName="GBBorder" Property="BorderBrush" Value="{StaticResource ItemSelectedHoverFill}"/>
                        </MultiTrigger>
                        <!-- EXECUTE LORSQU'UN ELEMENT A LE FOCUS-->
                		<Trigger x:Uid="Trigger_6" Property="IsFocused" Value="true">
                			<Setter x:Uid="Setter_28" TargetName="GBBorder"
                				Property="Opacity"
                				Value="1"/>
                		</Trigger>
                		<!--TRIGGER EXECUTE LORSQU'UN ELEMENT EST EXPAND-->
                		<Trigger x:Uid="Trigger_7" Property="IsExpanded" Value="false">
                			<Setter x:Uid="Setter_29" TargetName="GBItemEnfant"
                				Property="Visibility"
                				Value="Collapsed"/>
                		</Trigger>
                		<!--TRIGGER EXECUTE SI L'ITEM N'A PAS D'ENFANT POUR CACHER L'ICON D'EXPAND-->
                		<Trigger x:Uid="Trigger_8" Property="HasItems" Value="false">
                			<Setter x:Uid="Setter_30" TargetName="GBIconExpander"
                				Property="Visibility"
                				Value="Hidden"/>
                		</Trigger>
                	</ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
 
    <!--DEFINITION D'UN STYLE POUR LES ITEMS D'UN TREEVIEW-->
    <Style x:Uid="Style_5" x:Key="GBItems" TargetType="{x:Type TreeViewItem}">
        <Setter x:Uid="Setter_31" Property="OverridesDefaultStyle" Value="True" />
        <Setter x:Uid="Setter_32" Property="AllowDrop" Value="true"/>
        <Setter x:Uid="Setter_33" Property="FocusVisualStyle" Value="{x:Null}"/>
        <!--DEFINITION D'UN TEMPLATE POUR DECRIRE LA STRUCTURE VISUELLE DE LA LISTE-->
        <Setter x:Uid="Setter_34" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_4" x:Name="gbTemplate" TargetType="{x:Type TreeViewItem}">
                    <Grid x:Uid="Grid_5" Focusable="False">
                        <!--DEFINITION DES COLONNES DU TABLEAU
                                1 colonne pour l'icon expander
                                1 colonne pour le libellé-->
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition  x:Uid="ColumnDefinition_3" Width="15"/>
                            <ColumnDefinition x:Uid="ColumnDefinition_4"  />
                            <ColumnDefinition  x:Uid="ColumnDefinition_5" MinWidth="3" Width="20"/>
                        </Grid.ColumnDefinitions>
                        <!--DEFINITION DES LIGNES DU TABLEAU
                                1 ligne pour l'item
                                1 ligne pour ces enfants-->
                        <Grid.RowDefinitions>
                            <RowDefinition x:Uid="RowDefinition_3" Height="Auto"/>
                            <RowDefinition x:Uid="RowDefinition_4"/>
                        </Grid.RowDefinitions>
                        <!--PERSONNALISATION DE L'ICON EXPANDER-->
                        <!--PERSONNALISATION DE L'ITEM-->
                       <Border x:Uid="Border_1" x:Name="GBBorder" 
                                Grid.Column="0"
                                Grid.ColumnSpan="3"
                                CornerRadius="4" 
                                Background="Transparent"
                                Opacity="1"
                                Height="30"
                                BorderBrush="{StaticResource W8BorderGray}"
                                BorderThickness="1"
                                Margin="1">

                            <!--DEFINIE L'AFFICHAGE DE L'ITEM-->
                            <Grid x:Uid="Grid_6" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Uid="ColumnDefinition_6" Width="*"/>
                                    <ColumnDefinition x:Uid="ColumnDefinition_7" Width="16"/>
                                    <ColumnDefinition x:Uid="ColumnDefinition_8" Width="16"/>
                                    <ColumnDefinition x:Uid="ColumnDefinition_9" Width="20"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Uid="ContentPresenter_1" x:Name="GBZoneLibelle"
                                    Grid.ColumnSpan="3"
                                    Margin="5,0,0,0"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                                    <ContentPresenter.Content>
                                        <Grid x:Uid="Grid_7">
                                            <TextBox x:Uid="TextBox_1" x:Name="GBTextBoxItem" 
                                             Text="{TemplateBinding Header}"
                                             Style="{StaticResource GBTextBox}"
                                             FontSize="13.5"
                                             FontFamily="Calibri"
                                             Margin="-4,-2,0,0"
                                             Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"
                                             Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                                             Opacity="1"
                                             Padding="2"
                                             Visibility="Hidden"
                                                 VerticalAlignment="Center"/>
                                           <!-- <TextBlock x:Name="GBTextBlockItem2" Text="{TemplateBinding Header}" Visibility="Visible" Foreground="#EEEEEE"
                                                   Margin="0,1,0,2" FontFamily="Calibri" FontSize="13.5" FontStretch="UltraCondensed" 
                                                   HorizontalAlignment="Left" VerticalAlignment="Center" />-->
                                            <TextBlock x:Uid="TextBlock_1" x:Name="GBTextBlockItem" Text="{TemplateBinding Header}" Visibility="Visible"
                                                   Margin="0,0,0,2" FontFamily="Calibri" FontSize="13.5"
                                                   HorizontalAlignment="Left" VerticalAlignment="Center" />
                                        </Grid>
                                    </ContentPresenter.Content>
                                </ContentPresenter>
                             <!--   <Button x:Name="BoutonAjouter" Height="16" Width="16" Style="{StaticResource GBButtonIcone}" 
                                            Margin="1,1,0,0" 
                                            Grid.Column="1"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                        Opacity="1"
                                            Visibility="Hidden">
                                    <Button.Content>
                                        <Image Height="12" Width="12" Stretch="Fill" HorizontalAlignment="Left" 
                                                Source="/GBPlayer;component/Images/Icons/IconAjouter16.png"></Image>
                                    </Button.Content>
                                </Button>
                                <Button x:Name="BoutonSupprimer" Height="16" Width="16" Style="{StaticResource GBButtonIcone}" 
                                            Margin="1,1,0,0" 
                                            Grid.Column="2"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                        Opacity="1"
                                            Visibility="Hidden">
                                    <Button.Content>
                                        <Image Height="12" Width="12" Stretch="Fill" HorizontalAlignment="Left" 
                                                Source="/GBPlayer;component/Images/Icons/IconSupprimer16.png"></Image>
                                    </Button.Content>
                                </Button>-->
                            </Grid>

                        </Border>
                        <!--   <Border Grid.ColumnSpan="3" Margin="1,1,1,1" CornerRadius="4" BorderThickness="1" BorderBrush="Green"/>-->
                        <Border x:Uid="BordureDragDrop" x:Name="BordureDragDrop" Grid.ColumnSpan="3"  CornerRadius="4" BorderThickness="1" 
                                BorderBrush="{StaticResource APBrushBoutonBackground}"
                                Background="{StaticResource APBrushBoutonBackground}"                               
                                Opacity="0.7"
                                Visibility="Hidden"/>
                        <Border x:Uid="GBBordure" x:Name="GBBordure" 
                                Grid.Column="0"
                                Grid.ColumnSpan="3"
                                CornerRadius="4" 
                                Height="30"
                                BorderBrush="{StaticResource W8BorderGray}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="1"
                                Margin="1"/>
                        <!--SPECIFIE OU SONT POSITIONNES LES ITEMS ENFANTS-->
                        <ToggleButton x:Uid="ToggleButton_1" x:Name="GBIconExpander"
                                      Grid.Column="2"
                               Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                               Style="{StaticResource GBExpandCollapseToggleStyle}"
                                IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                        </ToggleButton>
                        <ItemsPresenter x:Uid="ItemsPresenter_2" x:Name="GBItemEnfant"
                                Grid.Row="1"
                                Grid.Column="1"
                                Grid.ColumnSpan="2"/>
                    </Grid>
                    <!--DEFINITION DES TRIGGERS DE LA PRESENTATION-->
                    <ControlTemplate.Triggers>
                        <!--TRIGGER EXECUTE LORSQU'UN ELEMENT EST SURVOLE-->
                        <Trigger x:Uid="Trigger_9" Property="IsMouseOver" SourceName="GBBorder" Value="True" >
                            <Setter x:Uid="Setter_35" TargetName="GBBorder" Property="Background" Value="{StaticResource ItemHoverFill}"/>
                            <Setter x:Uid="Setter_36" TargetName="GBBorder" Property="BorderBrush" Value="{StaticResource ItemHoverFill}"/>
                           <!-- <Setter TargetName="BoutonAjouter" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="BoutonSupprimer" Property="Visibility" Value="Visible"/>-->
                        </Trigger>
                        <!-- EXECUTE LORSQU'UN ELEMENT EST SURVOLE-->
                        <Trigger x:Uid="Trigger_10" Property="IsFocused" SourceName="GBTextBoxItem" Value="True">
                            <Setter x:Uid="Setter_37" TargetName="GBBorder" Property="Opacity" Value="1"/>
                        </Trigger>
                        <!-- EXECUTE LORSQU'UN ELEMENT EST SELECTIONNE-->
                        <Trigger x:Uid="Trigger_11" Property="IsSelected" Value="True">
                            <Setter x:Uid="Setter_38" Property="Background" TargetName="GBBorder" Value="{StaticResource ItemSelectedFill}"/>
                            <Setter x:Uid="Setter_39" Property="BorderBrush" TargetName="GBBordure" Value="{StaticResource ItemBorderBrush}"/>
                       </Trigger>
                        <MultiTrigger x:Uid="MultiTrigger_3">
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_5" Property="IsSelected" Value="true"/>
                                <Condition x:Uid="Condition_6" Property="Selector.IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter x:Uid="Setter_40" TargetName="GBBorder" Property="Background" Value="{StaticResource ItemSelectedInactiveFill}"/>
                            <Setter x:Uid="Setter_41" TargetName="GBBorder" Property="BorderBrush" Value="{StaticResource ItemSelectedInactiveFill}"/>
                        </MultiTrigger>
                        <MultiTrigger x:Uid="MultiTrigger_4">
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_7" Property="IsSelected" Value="true"/>
                                <Condition x:Uid="Condition_8" SourceName="GBBorder" Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter x:Uid="Setter_42" TargetName="GBBorder" Property="Background" Value="{StaticResource ItemSelectedHoverFill}"/>
                            <Setter x:Uid="Setter_43" TargetName="GBBorder" Property="BorderBrush" Value="{StaticResource ItemSelectedHoverFill}"/>
                        </MultiTrigger>
                        <!-- EXECUTE LORSQU'UN ELEMENT A LE FOCUS-->
                        <Trigger x:Uid="Trigger_12" Property="IsFocused" Value="true">
                            <Setter x:Uid="Setter_44" TargetName="GBBorder"
                				Property="Opacity"
                				Value="1"/>
                        </Trigger>
                        <!--TRIGGER EXECUTE LORSQU'UN ELEMENT EST EXPAND-->
                        <Trigger x:Uid="Trigger_13" Property="IsExpanded" Value="false">
                            <Setter x:Uid="Setter_45" TargetName="GBItemEnfant" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                         <!--TRIGGER EXECUTE SI L'ITEM N'A PAS D'ENFANT POUR CACHER L'ICON D'EXPAND-->
                        <Trigger x:Uid="Trigger_14" Property="HasItems" Value="false">
                            <Setter x:Uid="Setter_46" TargetName="GBIconExpander"
                				Property="Visibility"
                				Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>