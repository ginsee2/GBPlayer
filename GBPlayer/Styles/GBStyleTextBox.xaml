<ResourceDictionary 
  x:Uid="ResourceDictionary_1" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:gbDev="clr-namespace:gbDev">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary x:Uid="ResourceDictionary_2" Source="../Styles/GBColors.xaml"/>
        <ResourceDictionary x:Uid="ResourceDictionary_3" Source="../Styles/GBStyleMenu.xaml"/>
        <ResourceDictionary x:Uid="ResourceDictionary_4" Source="../Styles/GBStyleScrollView.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <gbDev:ConverterBoolToVisibility x:Uid="gbDev:ConverterBoolToVisibility_1" x:Key="BoolToVis" />

    <!--STYLE TEXT BOX POUR LISTVIEW VISIBLE QUE SI ITEM SELECTIONNE-->
    <Style x:Uid="Style_1" x:Key="GridEditStyle" BasedOn="{StaticResource GBTextBox}" TargetType="{x:Type TextBox}">
        <Setter x:Uid="Setter_1" Property="FontFamily" Value="Calibri"/>
        <Setter x:Uid="Setter_2" Property="VerticalAlignment" Value="Center"/>
        <Setter x:Uid="Setter_3" Property="Visibility" Value="{Binding Path=IsSelected,
            RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListViewItem}},
            Converter={StaticResource BoolToVis},ConverterParameter=True}"/>
    </Style>
    
    <!--STYLE ANCETRE DE TOUS LES AUTRES TEXT BOX-->
    <Style x:Uid="Style_2" x:Key="GBTextBox" TargetType="{x:Type TextBox}">
        <Setter x:Uid="Setter_4" Property="BorderThickness" Value="0"/>
        <Setter x:Uid="Setter_5" Property="Padding" Value="0"/>
        <Setter x:Uid="Setter_6" Property="AllowDrop" Value="true"/>
        <Setter x:Uid="Setter_7" Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter x:Uid="Setter_8" Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
        <Setter x:Uid="Setter_9" Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter x:Uid="Setter_10" Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter x:Uid="Setter_11" Property="FontFamily" Value="Calibri"/>
        <Setter x:Uid="Setter_12" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_1" TargetType="{x:Type TextBox}">
                    <Grid x:Uid="Grid_1">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Uid="ValidationStates" x:Name="ValidationStates">
                                <VisualState x:Uid="Valid" x:Name="Valid"/>
                           </VisualStateGroup>
                            <VisualStateGroup x:Uid="CommonStates" x:Name="CommonStates">
                                <VisualState x:Uid="Normal" x:Name="Normal"/>
                                <VisualState x:Uid="Disabled" x:Name="Disabled"/>
                                <VisualState x:Uid="ReadOnly" x:Name="ReadOnly"/>
                                <VisualState x:Uid="MouseOver" x:Name="MouseOver"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Uid="FocusStates" x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition x:Uid="VisualTransition_1" GeneratedDuration="0:0:0.6"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Uid="Unfocused" x:Name="Unfocused"/>
                                <VisualState x:Uid="Focused" x:Name="Focused">
                                    <Storyboard x:Uid="Storyboard_1">
                                        <DoubleAnimationUsingKeyFrames x:Uid="DoubleAnimationUsingKeyFrames_1" Storyboard.TargetProperty="(UIElement.Opacity)" 
                                                                       Storyboard.TargetName="border1">
                                            <EasingDoubleKeyFrame x:Uid="EasingDoubleKeyFrame_1" KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Uid="border1" x:Name="border1" BorderBrush="{StaticResource W8BorderOver}" BorderThickness="1" Margin="-1" 
                                CornerRadius="{Binding CornerRadius, ElementName=border}" Opacity="0"/>
                        <Border x:Uid="border" x:Name="border" BorderThickness="0" Background="{TemplateBinding Background}" 
                                CornerRadius="3" BorderBrush="{TemplateBinding BorderBrush}" Margin="0">
                            <ScrollViewer x:Uid="PART_ContentHost" x:Name="PART_ContentHost" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          Margin="0" 
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                          Style="{StaticResource GBStyleScrollViewer}"
                                          Background="{TemplateBinding Background}"
                                          BorderBrush= "{TemplateBinding BorderBrush}" 
                                          Foreground="{TemplateBinding Foreground}" 
                                          BorderThickness="0">
                            </ScrollViewer>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_1" Property="IsEnabled" Value="false">
                            <Setter x:Uid="Setter_13" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_2" Property="Validation.HasError" Value="true">
                            <Setter x:Uid="Setter_14" Property="ToolTip" 
                                Value="{Binding RelativeSource={x:Static RelativeSource.Self},Path=(Validation.Errors)[0].ErrorContent}"/>
                             <Setter x:Uid="Setter_15" Property="Foreground" Value="Red"/>
                            <Setter x:Uid="Setter_16" TargetName="border1" Property="BorderBrush" Value="Red"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter x:Uid="Setter_17" Property="ContextMenu">
            <Setter.Value>
            <ContextMenu x:Uid="MenuTextBox" x:Name="MenuTextBox">
                    <MenuItem x:Uid="MTBCouper" Name="MTBCouper" Command="ApplicationCommands.Cut" >
                    <MenuItem.Icon>
                        <Image  x:Uid="Image_1" Height="16" Width="16" Source="/GBPlayer;component/Images/imgmenus/information24.png" />
                    </MenuItem.Icon>
                </MenuItem>
                    <MenuItem x:Uid="MTBCopier" Name="MTBCopier" Command="ApplicationCommands.Copy" >
                    <MenuItem.Icon>
                        <Image  x:Uid="Image_2" Height="16" Width="16" Source="/GBPlayer;component/Images/imgmenus/extraction24.png" />
                    </MenuItem.Icon>
                </MenuItem>
                    <MenuItem x:Uid="MTBColler" Name="MTBColler" Command="ApplicationCommands.Paste" >
                    <MenuItem.Icon>
                        <Image  x:Uid="Image_3" Height="16" Width="16" Source="/GBPlayer;component/Images/imgmenus/extraction24.png" />
                    </MenuItem.Icon>
                </MenuItem>
            </ContextMenu>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Uid="Style_3" TargetType="{x:Type gbDev:GridTextBox}">
        <Setter x:Uid="Setter_18" Property="FontFamily" Value="Calibri"/>
        <Setter x:Uid="Setter_19" Property="VerticalAlignment" Value="Center"/>
        <Setter x:Uid="Setter_20" Property="Focusable" Value="False"/>
        <Setter x:Uid="Setter_21" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_2" TargetType="{x:Type gbDev:GridTextBox}">
                    <Border x:Uid="Border_1" Background="{TemplateBinding Background}">
                        <Grid x:Uid="Grid_2" >
                            <TextBlock x:Uid="ContenuHorsFocus" Margin="0" Text="{TemplateBinding Text}" Name="ContenuHorsFocus"
                                        Visibility="{Binding Path=IsSelected,
                                            RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListViewItem}},
                                            Converter={StaticResource BoolToVis},ConverterParameter=False}" />
                            <TextBox x:Uid="ContenuAvecFocus" Margin="-3,-1,0,0"  Name="ContenuAvecFocus"  
                                        Style="{StaticResource GBTextBox}"
                                        
                                        Background="Transparent"
                                        MinWidth="{TemplateBinding MinWidth}"
                                        Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Path=Text}" TextWrapping="WrapWithOverflow"
                                        Visibility="{Binding Path=IsSelected,
                                            RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListViewItem}},
                                            Converter={StaticResource BoolToVis},ConverterParameter=True}"/>
                        </Grid>
                     </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger x:Uid="MultiTrigger_1">
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_1" SourceName="ContenuHorsFocus" Property="IsMouseOver" Value="True"/>
                                <Condition x:Uid="Condition_2" Property="IsEnableLinq" Value="True"/>
                             </MultiTrigger.Conditions>
                            <Setter x:Uid="Setter_22" TargetName="ContenuHorsFocus"  Property="Foreground"  Value="Blue"/>
                            <Setter x:Uid="Setter_23" TargetName="ContenuHorsFocus"  Property="Cursor"  Value="Hand"/>
                            <Setter x:Uid="Setter_24" Property="Focusable"  Value="True"/>
                        </MultiTrigger>
                        <Trigger x:Uid="Trigger_3" Property="Text" Value="">
                            <Setter x:Uid="Setter_25" TargetName="ContenuHorsFocus"  Property="Cursor"  Value="Arrow"/>
                            <Setter x:Uid="Setter_26" Property="Focusable"  Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>